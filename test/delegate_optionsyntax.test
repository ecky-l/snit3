



#-----------------------------------------------------------------------
# 'delegate option' Syntax tests.
#
# This set of tests verifies that the 'delegation option' statement is
# interpreted properly, and that the type's optionInfo
# array is initialized properly.
#
# TBD: At some point, this needs to be folded into the regular
# option tests.

::tcltest::test delegateoptionsyntax-1.1 {'delegated' lists delegated option names} -body {
    type dog {
        delegate option -foo to comp
        delegate option -bar to comp
    }

    set ::dog::Snit_optionInfo(delegated)
} -cleanup {
    dog destroy
} -result {-foo -bar}

::tcltest::test delegateoptionsyntax-1.2 {'delegated' does not include '*'} -body {
    type dog {
        delegate option * to comp
    }

    set ::dog::Snit_optionInfo(delegated)
} -cleanup {
    dog destroy
} -result {}

::tcltest::test delegateoptionsyntax-1.3 {'islocal' is set to 0} -body {
    type dog {
        delegate option -foo to comp
    }

    set ::dog::Snit_optionInfo(islocal--foo)
} -cleanup {
    dog destroy
} -result {0}

::tcltest::test delegateoptionsyntax-1.4 {'islocal' is not set for '*'} -body {
    type dog {
        delegate option * to comp
    }

    info exists ::dog::Snit_optionInfo(islocal-*)
} -cleanup {
    dog destroy
} -result {0}

::tcltest::test delegateoptionsyntax-1.5 {'delegated-$comp' lists options for the component} -body {
    type dog {
        delegate option -foo to comp1
        delegate option -bar to comp1
        delegate option -baz to comp2

        # The * won't show up.
        delegate option * to comp2
    }

    list \
        $::dog::Snit_optionInfo(delegated-comp1) \
        $::dog::Snit_optionInfo(delegated-comp2)
} -cleanup {
    dog destroy
} -result {{-foo -bar} -baz}

::tcltest::test delegateoptionsyntax-1.6 {'except' is empty by default} -body {
    type dog {
        delegate option -foo to comp
    }

    set ::dog::Snit_optionInfo(except)
} -cleanup {
    dog destroy
} -result {}

::tcltest::test delegateoptionsyntax-1.7 {'except' lists exceptions} -body {
    type dog {
        delegate option * to comp except {-foo -bar -baz}
    }

    set ::dog::Snit_optionInfo(except)
} -cleanup {
    dog destroy
} -result {-foo -bar -baz}

::tcltest::test delegateoptionsyntax-1.8 {'target-$opt' set with default} -body {
    type dog {
        delegate option -foo to comp
    }

    set ::dog::Snit_optionInfo(target--foo)
} -cleanup {
    dog destroy
} -result {comp -foo}

::tcltest::test delegateoptionsyntax-1.9 {'target-$opt' set explicitly} -body {
    type dog {
        delegate option -foo to comp as -bar
    }

    set ::dog::Snit_optionInfo(target--foo)
} -cleanup {
    dog destroy
} -result {comp -bar}

::tcltest::test delegateoptionsyntax-1.10 {'starcomp' is {} by default} -body {
    type dog {
        delegate option -foo to comp
    }

    set ::dog::Snit_optionInfo(starcomp)
} -cleanup {
    dog destroy
} -result {}

::tcltest::test delegateoptionsyntax-1.11 {'starcomp' set for *} -body {
    type dog {
        delegate option * to comp
    }

    set ::dog::Snit_optionInfo(starcomp)
} -cleanup {
    dog destroy
} -result {comp}

::tcltest::test delegatedoptionsyntax-2.1 {implicit resource and class} -body {
    type dog {
        delegate option -foo to comp
    }

    list \
        $::dog::Snit_optionInfo(resource--foo) \
        $::dog::Snit_optionInfo(class--foo)
} -cleanup {
    dog destroy
} -result {foo Foo}

::tcltest::test delegatedoptionsyntax-2.2 {explicit resource, default class} -body {
    type dog {
        delegate option {-foo ffoo} to comp
    }

    list \
        $::dog::Snit_optionInfo(resource--foo) \
        $::dog::Snit_optionInfo(class--foo)
} -cleanup {
    dog destroy
} -result {ffoo Ffoo}

::tcltest::test delegatedoptionsyntax-2.3 {explicit resource and class} -body {
    type dog {
        delegate option {-foo ffoo FFoo} to comp
    }

    list \
        $::dog::Snit_optionInfo(resource--foo) \
        $::dog::Snit_optionInfo(class--foo)
} -cleanup {
    dog destroy
} -result {ffoo FFoo}

::tcltest::test delegatedoptionsyntax-2.4 {* doesn't get resource and class} -body {
    type dog {
        delegate option * to comp
    }

    list \
        [info exist ::dog::Snit_optionInfo(resource-*)] \
        [info exist ::dog::Snit_optionInfo(class-*)]
} -cleanup {
    dog destroy
} -result {0 0}


tcltest::cleanupTests
