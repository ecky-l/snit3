



#-----------------------------------------------------------------------
# Error handling
#
# This section verifies that errorInfo and errorCode are propagated
# appropriately on error.

::tcltest::test error-1.1 {typemethod errors propagate properly} -body {
    type dog {
        typemethod generr {} {
            error bogusError bogusInfo bogusCode
        }
    }

    catch {dog generr} result

    global errorInfo errorCode

    list $result [string match "*bogusInfo*" $errorInfo] $errorCode
} -cleanup {
    dog destroy
} -result {bogusError 1 bogusCode}

::tcltest::test error-1.2 {snit::type constructor errors propagate properly} -body {
    type dog {
        constructor {} {
            error bogusError bogusInfo bogusCode
        }
    }

    catch {dog fido} result

    global errorInfo errorCode

    list $result [string match "*bogusInfo*" $errorInfo] $errorCode
} -cleanup {
    dog destroy
} -result {{Error in constructor: bogusError} 1 bogusCode}

::tcltest::test error-1.3 {snit::widget constructor errors propagate properly} -constraints {
    tk
} -body {
    widget dog {
        constructor {args} {
            error bogusError bogusInfo bogusCode
        }
    }

    catch {dog .fido} result

    global errorInfo errorCode

    list $result [string match "*bogusInfo*" $errorInfo] $errorCode
} -cleanup {
    dog destroy
} -result {{Error in constructor: bogusError} 1 bogusCode}

::tcltest::test error-1.4 {method errors propagate properly} -body {
    type dog {
        method generr {} {
            error bogusError bogusInfo bogusCode
        }
    }

    dog fido
    catch {fido generr} result

    global errorInfo errorCode

    list $result [string match "*bogusInfo*" $errorInfo] $errorCode
} -cleanup {
    dog destroy
} -result {bogusError 1 bogusCode}

::tcltest::test error-1.5 {onconfigure errors propagate properly} -body {
    type dog {
        option -generr

        onconfigure -generr {value} {
            error bogusError bogusInfo bogusCode
        }
    }

    dog fido
    catch {fido configure -generr 0} result

    global errorInfo errorCode

    list $result [string match "*bogusInfo*" $errorInfo] $errorCode
} -cleanup {
    dog destroy
} -result {bogusError 1 bogusCode}

::tcltest::test error-1.6 {oncget errors propagate properly} -body {
    type dog {
        option -generr

        oncget -generr {
            error bogusError bogusInfo bogusCode
        }
    }

    dog fido
    catch {fido cget -generr} result

    global errorInfo errorCode

    list $result [string match "*bogusInfo*" $errorInfo] $errorCode
} -cleanup {
    dog destroy
} -result {bogusError 1 bogusCode}


tcltest::cleanupTests
